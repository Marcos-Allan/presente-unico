/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/mug-c1.glb -o src/components/Mug-c/index.jsx -r public 
*/

import { Decal, useGLTF, useTexture } from '@react-three/drei'
import { useControls } from 'leva';
import { useState } from 'react'
import { degToRad } from 'three/src/math/MathUtils.js';
import { Vector3, Euler } from "three";

export function MugC(props:any) {
  const texture = useTexture("https://tse2.mm.bing.net/th?id=OIP.f4THMQBLL1GblQbT0KxdeAHaEK&pid=Api&P=0&h=180");
  const { nodes, materials } = useGLTF('/mug-c1.glb') as any

  const [pos, setPos] = useState<Vector3>(new Vector3(0, 2, 0));
  const [rotation, setRotation] = useState<Euler>(new Euler(0, 0, 0));
  const [scale, setScale] = useState<Vector3>(new Vector3(1.5, 1.5, 1.5));

  useControls({
    angle: {
      min: degToRad(60),
      max: degToRad(300),
      value: Math.PI / 4,
      step: 0.01,
      onChange: (value) => {
        const x = Math.cos(value);
        const z = Math.sin(value);
        const rot = Math.atan2(x, z);
        setRotation(new Euler(0, rot, 0));
        setPos(new Vector3(x, pos.y, z));
      },
    },
    posY: {
      min: 0,
      max: 3,
      value: 1.8,
      step: 0.01,
      onChange: (value) => {
        setPos(new Vector3(pos.x, value, pos.z));
      },
    },
    scale: {
      min: 0.5,
      max: 3,
      value: 1.5,
      step: 0.01,
      onChange: (value) => {
        setScale(new Vector3(value, value, 1.5));
      },
    },
  });

  return (
    <group {...props} dispose={null}>
      {nodes.coffeeMug_1004 && (
        <mesh 
          geometry={nodes.coffeeMug_1004.geometry}
          material={materials['lambert3SG.004']}
        />
      )}

      {nodes.coffeeMug_1004_1 && (
        <mesh geometry={nodes.coffeeMug_1004_1.geometry}>
          <meshBasicMaterial transparent opacity={0} />
          <Decal position={pos} rotation={rotation} scale={scale}>
            <meshStandardMaterial
              map={texture}
              toneMapped={false}
              transparent
              polygonOffset
              polygonOffsetFactor={-1}
            />
          </Decal>
        </mesh>
      )}
    </group>
  )
}

useGLTF.preload('/mug-c1.glb')
